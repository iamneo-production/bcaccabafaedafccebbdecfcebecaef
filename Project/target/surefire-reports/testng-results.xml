<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-25T07:43:38 UTC" name="Surefire suite" finished-at="2023-08-25T07:44:25 UTC" duration-ms="46545">
    <groups>
    </groups>
    <test started-at="2023-08-25T07:43:38 UTC" name="Surefire test" finished-at="2023-08-25T07:44:25 UTC" duration-ms="46545">
      <class name="runner.Testcase1">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:runner.Testcase1@2a265ea9]" started-at="2023-08-25T07:43:39 UTC" name="beforeMethod" finished-at="2023-08-25T07:43:44 UTC" duration-ms="5119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addLowCostGiftCard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:runner.Testcase1@2a265ea9]" started-at="2023-08-25T07:43:44 UTC" name="addLowCostGiftCard" data-provider="testData" finished-at="2023-08-25T07:43:51 UTC" duration-ms="7017" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Alice]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[demo@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[BOB]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[demo1@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[book]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at runner.Testcase1.addLowCostGiftCard(Testcase1.java:133)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:112)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addLowCostGiftCard -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:runner.Testcase1@2a265ea9]" started-at="2023-08-25T07:43:51 UTC" name="afterMethod" finished-at="2023-08-25T07:43:52 UTC" duration-ms="558" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:runner.Testcase1@2a265ea9]" started-at="2023-08-25T07:43:52 UTC" name="beforeMethod" finished-at="2023-08-25T07:43:54 UTC" duration-ms="2485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TestCheckButton(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:runner.Testcase1@2a265ea9]" started-at="2023-08-25T07:43:54 UTC" name="TestCheckButton" data-provider="testData" finished-at="2023-08-25T07:44:02 UTC" duration-ms="7230" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Alice]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[demo@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[BOB]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[demo1@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[book]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCheckButton -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:runner.Testcase1@2a265ea9]" started-at="2023-08-25T07:44:02 UTC" name="afterMethod" finished-at="2023-08-25T07:44:02 UTC" duration-ms="162" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:runner.Testcase1@2a265ea9]" started-at="2023-08-25T07:44:02 UTC" name="beforeMethod" finished-at="2023-08-25T07:44:04 UTC" duration-ms="2434" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TestCheckout(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:runner.Testcase1@2a265ea9]" started-at="2023-08-25T07:44:04 UTC" name="TestCheckout" data-provider="testData" finished-at="2023-08-25T07:44:20 UTC" duration-ms="15534" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Alice]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[demo@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[BOB]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[demo1@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[book]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCheckout -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:runner.Testcase1@2a265ea9]" started-at="2023-08-25T07:44:20 UTC" name="afterMethod" finished-at="2023-08-25T07:44:20 UTC" duration-ms="153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:runner.Testcase1@2a265ea9]" started-at="2023-08-25T07:44:20 UTC" name="beforeMethod" finished-at="2023-08-25T07:44:23 UTC" duration-ms="2550" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="Booksearch(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:4, instance:runner.Testcase1@2a265ea9]" started-at="2023-08-25T07:44:23 UTC" name="Booksearch" data-provider="testData" finished-at="2023-08-25T07:44:25 UTC" duration-ms="2162" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Alice]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[demo@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[BOB]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[demo1@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[book]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Booksearch -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:runner.Testcase1@2a265ea9]" started-at="2023-08-25T07:44:25 UTC" name="afterMethod" finished-at="2023-08-25T07:44:25 UTC" duration-ms="129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- runner.Testcase1 -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
